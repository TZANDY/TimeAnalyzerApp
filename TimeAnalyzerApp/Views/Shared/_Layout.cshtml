@using System.Security.Claims
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - TimeAnalyzerApp</title>
    <!-- Google Fonts -->
    <link href="https://fonts.gstatic.com" rel="preconnect">
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Nunito:300,300i,400,400i,600,600i,700,700i|Poppins:300,300i,400,400i,500,500i,600,600i,700,700i" rel="stylesheet">

    <link href="~/lib/bootstrap/css/bootstrap.min.css" rel="stylesheet" />
    <link href="~/lib/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdn.datatables.net/2.2.2/css/dataTables.dataTables.css" />
    <link rel="stylesheet" href="https://cdn.datatables.net/buttons/3.2.2/css/buttons.dataTables.css" />
    <link rel="stylesheet" href="https://cdn.datatables.net/responsive/3.0.4/css/responsive.dataTables.css" />
    <link rel="stylesheet" href="https://cdn.datatables.net/2.2.2/css/dataTables.dataTables.css" />
    @await RenderSectionAsync("Styles", required: false)
</head>
<body>
    <!-- ======= Header ======= -->
    <header id="header" class="header fixed-top d-flex align-items-center">

        <div class="d-flex align-items-center justify-content-between">
            <a href="@Url.Action("Index","Home")" class="logo d-flex align-items-center">
                <img src="~/img/logo-reducer.png" alt="">
                <span class="d-none d-lg-block">TimeAnalyzer</span>
            </a>
            <i class="bi bi-list toggle-sidebar-btn"></i>
        </div><!-- End Logo -->

        <nav class="header-nav ms-auto">
            <ul class="d-flex align-items-center">

                <li class="nav-item dropdown pe-3">

                    <a class="nav-link nav-profile d-flex align-items-center pe-0" href="#" data-bs-toggle="dropdown">
                        @* <img src="assets/img/profile-img.jpg" alt="Profile" class="rounded-circle"> *@
                        <i class="bi bi-person-circle"></i>
                        <span class="d-none d-md-block dropdown-toggle ps-2">@User.Claims.FirstOrDefault(x => x.Type == ClaimTypes.Name).Value.ToUpper()</span>
                    </a><!-- End Profile Iamge Icon -->

                    <ul class="dropdown-menu dropdown-menu-end dropdown-menu-arrow profile">
                        <li class="dropdown-header">
                            <h6>
                                @User.Claims.FirstOrDefault(x => x.Type == ClaimTypes.Name).Value.ToUpper()
                            </h6>
                            <span>@User.Claims.FirstOrDefault(x => x.Type == ClaimTypes.Role).Value.ToUpper()</span>
                        </li>
                        <li>
                            <hr class="dropdown-divider">
                        </li>
                        <li>
                            <a class="dropdown-item d-flex align-items-center" asp-action="Logout" asp-controller="Access">
                                <i class="bi bi-box-arrow-right"></i>
                                <span>Sign Out</span>
                            </a>
                        </li>

                    </ul><!-- End Profile Dropdown Items -->
                </li><!-- End Profile Nav -->

            </ul>
        </nav><!-- End Icons Navigation -->

    </header><!-- End Header -->
    <!-- ======= Sidebar ======= -->
    <aside id="sidebar" class="sidebar">

        <ul class="sidebar-nav" id="sidebar-nav">
            <li class="nav-item">
                <a class="nav-link collapsed" href="@Url.Action("Index","Report")">
                    <i class="bi bi-file-earmark-bar-graph-fill"></i>
                    <span>Reportes</span>
                </a>
            </li><!-- End Profile Page Nav -->
        </ul>
    </aside><!-- End Sidebar-->


    <main id="main" class="main" >
        @RenderBody()
    </main>

    <footer id="footer" class="footer">
        <div class="copyright">
            &copy; Copyright <strong><span>Alfaro RRHH </span></strong>. All Rights Reserved
        </div>
    </footer><!-- End Footer -->
    <script src="~/lib/jquery/jquery.min.js"></script>
    <script src="~/lib/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/main.js" asp-append-version="true"></script>
    <script src="https://cdn.datatables.net/2.2.2/js/dataTables.js"></script>
    <script src="https://cdn.datatables.net/responsive/3.0.0/js/dataTables.responsive.js"></script>
    <script src="https://cdn.datatables.net/responsive/3.0.4/js/responsive.dataTables.js"></script>
    <script src="https://cdn.datatables.net/buttons/3.2.2/js/dataTables.buttons.js"></script>
    <script src="https://cdn.datatables.net/buttons/3.2.2/js/buttons.dataTables.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.10.1/jszip.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/vfs_fonts.js"></script>
    <script src="https://cdn.datatables.net/buttons/3.2.2/js/buttons.html5.min.js"></script>
    @await RenderSectionAsync("Scripts", required: false)
    <script>
        const userAuthenticated = '@User.Identity!.IsAuthenticated' === 'True';
        const quantitySecondsToLogout = 15000; // 10 minutos
        const urlResetearCookie = '@Url.Action("ResetCookie", "Access")';
        const cantidadSegundosRefrescarCookie = 600000; // 10 minutos
        let timer;
        if (userAuthenticated) {
            timerInactive();

            function timerInactive() {
                resetTimer(); // Inicia el temporizador al cargar la página
                document.onmousemove = resetTimer;
                document.onkeydown = resetTimer;
            }

            function resetTimer() {
                console.log('RESET');
                clearTimeout(timer);
                timer = setTimeout(logout, quantitySecondsToLogout);
            }

            async function logout() {
                try {
                    window.location.href = '@Url.Action("Logout", "Access")';
                } catch (error) {
                    console.log(error);
                }
            }

            setInterval(resetCookie, cantidadSegundosRefrescarCookie);

            async function resetCookie() {
                try {
                    await fetch(urlResetearCookie, { method: 'GET' });
                } catch (error) {
                    console.log('Error al resetear la cookie:', error);
                }
            }
        }
    </script>
</body>
</html>
